Class.allInstances()->exists(c|c.ownedAttribute->exists(o|o.oclIsTypeOf(Property))) and Property.allInstances()->exists (p|p.stereotypeNonDeterministic>0) Class.allInstances()->exists(c|c.ownedAttribute->exists(o|o.oclIsTypeOf(Property))) and Property.allInstances()->exists (p|p.stereotypeNonDeterministic<=0) Class.allInstances()->exists(c|c.ownedBehavior->exists(o| o.oclIsTypeOf(StateMachine))) and StateMachine.allInstances()->exists(sm|sm.region->exists(r| r.oclIsTypeOf(Region))) and Region.allInstances()->exists(r|r.transition->exists(t| t.oclIsTypeOf(Transition))) and Transition.allInstances()->exists(t|t.source.oclIsTypeOf(Pseudostate) and t.target.oclIsTypeOf(State) and t.stereotypeTimeProbability>0 )  and Class.allInstances()->exists(c|c.ownedAttribute->exists(o|o.oclIsTypeOf(Property))) and Property.allInstances()->exists (p|p.stereotypeNonDeterministic>0) Class.allInstances()->exists(c|c.ownedBehavior->exists(o| o.oclIsTypeOf(StateMachine))) and StateMachine.allInstances()->exists(sm|sm.region->exists(r| r.oclIsTypeOf(Region))) and Region.allInstances()->exists(r|r.transition->exists(t| t.oclIsTypeOf(Transition))) and Transition.allInstances()->exists(t|t.source.oclIsTypeOf(Pseudostate) and t.target.oclIsTypeOf(State) and t.stereotypeTimeProbability<=0)  and Class.allInstances()->exists(c|c.ownedAttribute->exists(o|o.oclIsTypeOf(Property))) and Property.allInstances()->exists (p|p.stereotypeNonDeterministic>0) Pseudostate.allInstances()->exists(p|p.stereotypeNDChoice>0) and Class.allInstances()->exists(c|c.ownedAttribute->exists(o|o.oclIsTypeOf(Property))) and Property.allInstances()->exists (p|p.stereotypeNonDeterministic>0)  and Class.allInstances()->exists(c|c.ownedBehavior->exists(o| o.oclIsTypeOf(StateMachine))) and StateMachine.allInstances()->exists(sm|sm.region->exists(r| r.oclIsTypeOf(Region))) and Region.allInstances()->exists(r|r.transition->exists(t| t.oclIsTypeOf(Transition))) and Transition.allInstances()->exists(t|t.source.oclIsTypeOf(Pseudostate) and t.target.oclIsTypeOf(State) and t.stereotypeTimeProbability>0 ) Pseudostate.allInstances()->exists(p|p.stereotypeNDChoice<=0) and Class.allInstances()->exists(c|c.ownedAttribute->exists(o|o.oclIsTypeOf(Property))) and Property.allInstances()->exists (p|p.stereotypeNonDeterministic>0)  and Class.allInstances()->exists(c|c.ownedBehavior->exists(o| o.oclIsTypeOf(StateMachine))) and StateMachine.allInstances()->exists(sm|sm.region->exists(r| r.oclIsTypeOf(Region))) and Region.allInstances()->exists(r|r.transition->exists(t| t.oclIsTypeOf(Transition))) and Transition.allInstances()->exists(t|t.source.oclIsTypeOf(Pseudostate) and t.target.oclIsTypeOf(State) and t.stereotypeTimeProbability>0 ) Property.allInstances()->exists(p|p.stereotypeNonDeterministic>0 ) and Class.allInstances()->exists(c|c.ownedAttribute->exists(o|o.oclIsTypeOf(Property))) and Property.allInstances()->exists (p|p.stereotypeNonDeterministic>0)  and Class.allInstances()->exists(c|c.ownedBehavior->exists(o| o.oclIsTypeOf(StateMachine))) and StateMachine.allInstances()->exists(sm|sm.region->exists(r| r.oclIsTypeOf(Region))) and Region.allInstances()->exists(r|r.transition->exists(t| t.oclIsTypeOf(Transition))) and Transition.allInstances()->exists(t|t.source.oclIsTypeOf(Pseudostate) and t.target.oclIsTypeOf(State) and t.stereotypeTimeProbability>0 )  and Pseudostate.allInstances()->exists(p|p.stereotypeNDChoice>0)Property.allInstances()->exists(p|p.stereotypeNonDeterministic<=0 ) and Class.allInstances()->exists(c|c.ownedAttribute->exists(o|o.oclIsTypeOf(Property))) and Property.allInstances()->exists (p|p.stereotypeNonDeterministic>0)  and Class.allInstances()->exists(c|c.ownedBehavior->exists(o| o.oclIsTypeOf(StateMachine))) and StateMachine.allInstances()->exists(sm|sm.region->exists(r| r.oclIsTypeOf(Region))) and Region.allInstances()->exists(r|r.transition->exists(t| t.oclIsTypeOf(Transition))) and Transition.allInstances()->exists(t|t.source.oclIsTypeOf(Pseudostate) and t.target.oclIsTypeOf(State) and t.stereotypeTimeProbability>0 )  and Pseudostate.allInstances()->exists(p|p.stereotypeNDChoice>0)Property.allInstances()->exists(p|p.stereotypeNonDeterministic>0 ) and Class.allInstances()->exists(c|c.ownedAttribute->exists(o|o.oclIsTypeOf(Property))) and Property.allInstances()->exists (p|p.stereotypeNonDeterministic>0)  and Class.allInstances()->exists(c|c.ownedBehavior->exists(o| o.oclIsTypeOf(StateMachine))) and StateMachine.allInstances()->exists(sm|sm.region->exists(r| r.oclIsTypeOf(Region))) and Region.allInstances()->exists(r|r.transition->exists(t| t.oclIsTypeOf(Transition))) and Transition.allInstances()->exists(t|t.source.oclIsTypeOf(Pseudostate) and t.target.oclIsTypeOf(State) and t.stereotypeTimeProbability>0 )  and Pseudostate.allInstances()->exists(p|p.stereotypeNDChoice>0) and Property.allInstances()->exists(p|p.stereotypeNonDeterministic>0 )Property.allInstances()->exists(p|p.stereotypeNonDeterministic<=0) and Class.allInstances()->exists(c|c.ownedAttribute->exists(o|o.oclIsTypeOf(Property))) and Property.allInstances()->exists (p|p.stereotypeNonDeterministic>0)  and Class.allInstances()->exists(c|c.ownedBehavior->exists(o| o.oclIsTypeOf(StateMachine))) and StateMachine.allInstances()->exists(sm|sm.region->exists(r| r.oclIsTypeOf(Region))) and Region.allInstances()->exists(r|r.transition->exists(t| t.oclIsTypeOf(Transition))) and Transition.allInstances()->exists(t|t.source.oclIsTypeOf(Pseudostate) and t.target.oclIsTypeOf(State) and t.stereotypeTimeProbability>0 )  and Pseudostate.allInstances()->exists(p|p.stereotypeNDChoice>0) and Property.allInstances()->exists(p|p.stereotypeNonDeterministic>0 )Transition.allInstances()->exists(t|t.target.oclIsTypeOf(State) and t.stereotypeTimeProbability>0 ) and State.allInstances()->exists (s|s.stereotypeFailure>0) and Class.allInstances()->exists(c|c.ownedAttribute->exists(o|o.oclIsTypeOf(Property))) and Property.allInstances()->exists (p|p.stereotypeNonDeterministic>0)  and Class.allInstances()->exists(c|c.ownedBehavior->exists(o| o.oclIsTypeOf(StateMachine))) and StateMachine.allInstances()->exists(sm|sm.region->exists(r| r.oclIsTypeOf(Region))) and Region.allInstances()->exists(r|r.transition->exists(t| t.oclIsTypeOf(Transition))) and Transition.allInstances()->exists(t|t.source.oclIsTypeOf(Pseudostate) and t.target.oclIsTypeOf(State) and t.stereotypeTimeProbability>0 )  and Pseudostate.allInstances()->exists(p|p.stereotypeNDChoice>0) and Property.allInstances()->exists(p|p.stereotypeNonDeterministic>0 ) and Property.allInstances()->exists(p|p.stereotypeNonDeterministic>0 )Transition.allInstances()->exists(t|t.target.oclIsTypeOf(State) and t.stereotypeTimeProbability>0) and State.allInstances()->exists (s|s.stereotypeFailure<=0) and Class.allInstances()->exists(c|c.ownedAttribute->exists(o|o.oclIsTypeOf(Property))) and Property.allInstances()->exists (p|p.stereotypeNonDeterministic>0)  and Class.allInstances()->exists(c|c.ownedBehavior->exists(o| o.oclIsTypeOf(StateMachine))) and StateMachine.allInstances()->exists(sm|sm.region->exists(r| r.oclIsTypeOf(Region))) and Region.allInstances()->exists(r|r.transition->exists(t| t.oclIsTypeOf(Transition))) and Transition.allInstances()->exists(t|t.source.oclIsTypeOf(Pseudostate) and t.target.oclIsTypeOf(State) and t.stereotypeTimeProbability>0 )  and Pseudostate.allInstances()->exists(p|p.stereotypeNDChoice>0) and Property.allInstances()->exists(p|p.stereotypeNonDeterministic>0 ) and Property.allInstances()->exists(p|p.stereotypeNonDeterministic>0 )Class.allInstances()->forAll(c|c.stereotypeCotext>0) and Class.allInstances()->exists(c|c.ownedAttribute->exists(o|o.oclIsTypeOf(Property))) and Property.allInstances()->exists (p|p.stereotypeNonDeterministic>0)  and Class.allInstances()->exists(c|c.ownedBehavior->exists(o| o.oclIsTypeOf(StateMachine))) and StateMachine.allInstances()->exists(sm|sm.region->exists(r| r.oclIsTypeOf(Region))) and Region.allInstances()->exists(r|r.transition->exists(t| t.oclIsTypeOf(Transition))) and Transition.allInstances()->exists(t|t.source.oclIsTypeOf(Pseudostate) and t.target.oclIsTypeOf(State) and t.stereotypeTimeProbability>0 )  and Pseudostate.allInstances()->exists(p|p.stereotypeNDChoice>0) and Property.allInstances()->exists(p|p.stereotypeNonDeterministic>0 ) and Property.allInstances()->exists(p|p.stereotypeNonDeterministic>0 ) and Transition.allInstances()->exists(t|t.target.oclIsTypeOf(State) and t.stereotypeTimeProbability>0 ) and State.allInstances()->exists (s|s.stereotypeFailure>0)Class.allInstances()->forAll(c|c.stereotypeCotext<=0) and Class.allInstances()->exists(c|c.ownedAttribute->exists(o|o.oclIsTypeOf(Property))) and Property.allInstances()->exists (p|p.stereotypeNonDeterministic>0)  and Class.allInstances()->exists(c|c.ownedBehavior->exists(o| o.oclIsTypeOf(StateMachine))) and StateMachine.allInstances()->exists(sm|sm.region->exists(r| r.oclIsTypeOf(Region))) and Region.allInstances()->exists(r|r.transition->exists(t| t.oclIsTypeOf(Transition))) and Transition.allInstances()->exists(t|t.source.oclIsTypeOf(Pseudostate) and t.target.oclIsTypeOf(State) and t.stereotypeTimeProbability>0 )  and Pseudostate.allInstances()->exists(p|p.stereotypeNDChoice>0) and Property.allInstances()->exists(p|p.stereotypeNonDeterministic>0 ) and Property.allInstances()->exists(p|p.stereotypeNonDeterministic>0 ) and Transition.allInstances()->exists(t|t.target.oclIsTypeOf(State) and t.stereotypeTimeProbability>0 ) and State.allInstances()->exists (s|s.stereotypeFailure>0)StateMachine.allInstances()->forAll(sm|(sm.region->size()>1)) and Class.allInstances()->exists(c|c.ownedAttribute->exists(o|o.oclIsTypeOf(Property))) and Property.allInstances()->exists (p|p.stereotypeNonDeterministic>0)  and Class.allInstances()->exists(c|c.ownedBehavior->exists(o| o.oclIsTypeOf(StateMachine))) and StateMachine.allInstances()->exists(sm|sm.region->exists(r| r.oclIsTypeOf(Region))) and Region.allInstances()->exists(r|r.transition->exists(t| t.oclIsTypeOf(Transition))) and Transition.allInstances()->exists(t|t.source.oclIsTypeOf(Pseudostate) and t.target.oclIsTypeOf(State) and t.stereotypeTimeProbability>0 )  and Pseudostate.allInstances()->exists(p|p.stereotypeNDChoice>0) and Property.allInstances()->exists(p|p.stereotypeNonDeterministic>0 ) and Property.allInstances()->exists(p|p.stereotypeNonDeterministic>0 ) and Transition.allInstances()->exists(t|t.target.oclIsTypeOf(State) and t.stereotypeTimeProbability>0 ) and State.allInstances()->exists (s|s.stereotypeFailure>0) and Class.allInstances()->forAll(c|c.stereotypeCotext>0)StateMachine.allInstances()->forAll(sm|(sm.region->size()=1)) and Class.allInstances()->exists(c|c.ownedAttribute->exists(o|o.oclIsTypeOf(Property))) and Property.allInstances()->exists (p|p.stereotypeNonDeterministic>0)  and Class.allInstances()->exists(c|c.ownedBehavior->exists(o| o.oclIsTypeOf(StateMachine))) and StateMachine.allInstances()->exists(sm|sm.region->exists(r| r.oclIsTypeOf(Region))) and Region.allInstances()->exists(r|r.transition->exists(t| t.oclIsTypeOf(Transition))) and Transition.allInstances()->exists(t|t.source.oclIsTypeOf(Pseudostate) and t.target.oclIsTypeOf(State) and t.stereotypeTimeProbability>0 )  and Pseudostate.allInstances()->exists(p|p.stereotypeNDChoice>0) and Property.allInstances()->exists(p|p.stereotypeNonDeterministic>0 ) and Property.allInstances()->exists(p|p.stereotypeNonDeterministic>0 ) and Transition.allInstances()->exists(t|t.target.oclIsTypeOf(State) and t.stereotypeTimeProbability>0 ) and State.allInstances()->exists (s|s.stereotypeFailure>0) and Class.allInstances()->forAll(c|c.stereotypeCotext>0)Region.allInstances()->exists(r|(r.subvertex->select(oclIsTypeOf(State))->collect(oclAsType(State))->select(isComposite=true)->size() > 1))Region.allInstances()->exists(r|(r.subvertex->select(oclIsTypeOf(State))->collect(oclAsType(State))->select(isComposite=true)->size() <= 1))State.allInstances()->exists(st|(st.region->size()>1)) and Region.allInstances()->exists(r|(r.subvertex->select(oclIsTypeOf(State))->collect(oclAsType(State))->select(isComposite=true)->size() > 1))State.allInstances()->exists(st|(st.region->size()=1)) and Region.allInstances()->exists(r|(r.subvertex->select(oclIsTypeOf(State))->collect(oclAsType(State))->select(isComposite=true)->size() > 1))State.allInstances()->exists(s|s.stereotypeError>0)State.allInstances()->exists(s|s.stereotypeError<=0)Class.allInstances()->exists(c|c.ownedBehavior->exists(oclIsTypeOf(StateMachine))) and State.allInstances()->exists(s|s.stereotypeError>0)Class.allInstances()->exists(c|c.ownedBehavior->exists(oclIsTypeOf(StateMachine))) and State.allInstances()->exists(s|s.stereotypeError>0)Class.allInstances()->exists(c|c.isActive=true)Class.allInstances()->exists(c|c.isActive=false)Region.allInstances()->size()>1 and StateMachine.allInstances()->exists(st|st.region->size()>1)Region.allInstances()->size()>0 and StateMachine.allInstances()->exists(st|st.region->size()=1)State.allInstances()->exists(st|st.isComposite=true) and State.allInstances()->exists(st|st.isComposite=true) and Region.allInstances()->size()>1 and StateMachine.allInstances()->exists(st|st.region->size()>1)State.allInstances()->exists(st|st.isComposite=false) and State.allInstances()->exists(st|st.isComposite=true) and Region.allInstances()->size()>1 and StateMachine.allInstances()->exists(st|st.region->size()>1)Region.allInstances()->size()>1 and StateMachine.allInstances()->exists(st|st.region->size()>1) and State.allInstances()->exists(st|st.isComposite=true)Region.allInstances()->size()>0 and StateMachine.allInstances()->exists(st|st.region->size()=1) and State.allInstances()->exists(st|st.isComposite=true)State.allInstances()->exists(st|st.isComposite=true)State.allInstances()->exists(st|st.isComposite=false)State.allInstances()->exists(st|st.isComposite=true)State.allInstances()->exists(st|st.isComposite=false)Region.allInstances()->size()>1 and StateMachine.allInstances()->exists(st|st.region->size()>1) and State.allInstances()->exists(st|st.isComposite=true)Region.allInstances()->size()>0 and StateMachine.allInstances()->exists(st|st.region->size()=1) and State.allInstances()->exists(st|st.isComposite=true)State.allInstances()->exists(st|st.isComposite=true)State.allInstances()->exists(st|st.isComposite=false)StateMachine.allInstances()->exists(sm|sm.region->size()>1)StateMachine.allInstances()->exists(sm|sm.region->size()=1)Region.allInstances()->size()>1 and StateMachine.allInstances()->exists(st|st.region->size()>1)Region.allInstances()->size()>0 and StateMachine.allInstances()->exists(st|st.region->size()=1)Transition.allInstances()->exists(t|t.source.oclIsTypeOf(Pseudostate)) and Class.allInstances()->exists(c|c.isActive=true) and Class.allInstances()->exists(c|c.ownedOperation->notEmpty()) and Transition.allInstances()->exists(t|t.effect.oclIsTypeOf(OpaqueBehavior)) and Property.allInstances()->exists(p|p.stereotypeNonDeterministic>0) and Region.allInstances()->size()>0 and StateMachine.allInstances()->exists(st|st.region->size()=1)Transition.allInstances()->exists(t|t.source.oclIsTypeOf(State)) and Class.allInstances()->exists(c|c.isActive=true) and Class.allInstances()->exists(c|c.ownedOperation->notEmpty()) and Transition.allInstances()->exists(t|t.effect.oclIsTypeOf(OpaqueBehavior)) and Property.allInstances()->exists(p|p.stereotypeNonDeterministic>0) and Region.allInstances()->size()>0 and StateMachine.allInstances()->exists(st|st.region->size()=1)Pseudostate.allInstances()->exists(f|(f.kind = PseudostateKind::initial)) and Class.allInstances()->exists(c|c.isActive=true) and Class.allInstances()->exists(c|c.ownedOperation->notEmpty()) and Transition.allInstances()->exists(t|t.effect.oclIsTypeOf(OpaqueBehavior)) and Property.allInstances()->exists(p|p.stereotypeNonDeterministic>0) and Region.allInstances()->size()>0 and StateMachine.allInstances()->exists(st|st.region->size()=1) and Transition.allInstances()->exists(t|t.source.oclIsTypeOf(Pseudostate))Pseudostate.allInstances()->exists(f|((f.kind = PseudostateKind::deepHistory) or (f.kind = PseudostateKind::shallowHistory)))  and Class.allInstances()->exists(c|c.isActive=true) and Class.allInstances()->exists(c|c.ownedOperation->notEmpty()) and Transition.allInstances()->exists(t|t.effect.oclIsTypeOf(OpaqueBehavior)) and Property.allInstances()->exists(p|p.stereotypeNonDeterministic>0) and Region.allInstances()->size()>0 and StateMachine.allInstances()->exists(st|st.region->size()=1) and Transition.allInstances()->exists(t|t.source.oclIsTypeOf(Pseudostate))Pseudostate.allInstances()->exists(f|f.outgoing->exists(t|t.effect.oclIsTypeOf(OpaqueBehavior))) and Class.allInstances()->exists(c|c.isActive=true) and Class.allInstances()->exists(c|c.ownedOperation->notEmpty()) and Transition.allInstances()->exists(t|t.effect.oclIsTypeOf(OpaqueBehavior)) and Property.allInstances()->exists(p|p.stereotypeNonDeterministic>0) and Region.allInstances()->size()>0 and StateMachine.allInstances()->exists(st|st.region->size()=1) and Transition.allInstances()->exists(t|t.source.oclIsTypeOf(Pseudostate)) and Pseudostate.allInstances()->exists(f|(f.kind = PseudostateKind::initial))Pseudostate.allInstances()->exists(f|f.outgoing->exists(t|t.effect.oclIsUndefined())) and Class.allInstances()->exists(c|c.isActive=true) and Class.allInstances()->exists(c|c.ownedOperation->notEmpty()) and Transition.allInstances()->exists(t|t.effect.oclIsTypeOf(OpaqueBehavior)) and Property.allInstances()->exists(p|p.stereotypeNonDeterministic>0) and Region.allInstances()->size()>0 and StateMachine.allInstances()->exists(st|st.region->size()=1) and Transition.allInstances()->exists(t|t.source.oclIsTypeOf(Pseudostate)) and Pseudostate.allInstances()->exists(f|(f.kind = PseudostateKind::initial))Region.allInstances()->size()>1 and StateMachine.allInstances()->exists(st|st.region->size()>1)Region.allInstances()->size()>0 and StateMachine.allInstances()->exists(st|st.region->size()=1)Region.allInstances()->exists(r|r.transition->notEmpty())Region.allInstances()->exists(r|r.transition->isEmpty())Transition.allInstances()->exists(t|t.target.oclIsTypeOf(Pseudostate))Transition.allInstances()->exists(t|t.target.oclIsTypeOf(FinalState) or t.target.oclIsTypeOf(State))Class.allInstances()->exists(c|c.isActive=true)Class.allInstances()->exists(c|c.isActive=false)Class.allInstances()->exists(c|c.ownedOperation->notEmpty()) and Class.allInstances()->exists(c|c.isActive=true)Class.allInstances()->exists(c|c.ownedOperation->isEmpty()) and Class.allInstances()->exists(c|c.isActive=true)Transition.allInstances()->exists(t|t.effect.oclIsTypeOf(OpaqueBehavior)) and Class.allInstances()->exists(c|c.isActive=true) and Class.allInstances()->exists(c|c.ownedOperation->notEmpty())Transition.allInstances()->exists(t|t.effect.oclIsUndefined()) and Class.allInstances()->exists(c|c.isActive=true) and Class.allInstances()->exists(c|c.ownedOperation->notEmpty())Property.allInstances()->exists(p|p.stereotypeNonDeterministic>0) and Class.allInstances()->exists(c|c.isActive=true) and Class.allInstances()->exists(c|c.ownedOperation->notEmpty()) and Transition.allInstances()->exists(t|t.effect.oclIsTypeOf(OpaqueBehavior))Property.allInstances()->exists(p|p.stereotypeNonDeterministic<=0) and Class.allInstances()->exists(c|c.isActive=true) and Class.allInstances()->exists(c|c.ownedOperation->notEmpty()) and Transition.allInstances()->exists(t|t.effect.oclIsTypeOf(OpaqueBehavior))Region.allInstances()->size()>1 and StateMachine.allInstances()->exists(st|st.region->size()>1) and Class.allInstances()->exists(c|c.isActive=true) and Class.allInstances()->exists(c|c.ownedOperation->notEmpty()) and Transition.allInstances()->exists(t|t.effect.oclIsTypeOf(OpaqueBehavior)) and Property.allInstances()->exists(p|p.stereotypeNonDeterministic>0)Region.allInstances()->size()>0 and StateMachine.allInstances()->exists(st|st.region->size()=1) and Class.allInstances()->exists(c|c.isActive=true) and Class.allInstances()->exists(c|c.ownedOperation->notEmpty()) and Transition.allInstances()->exists(t|t.effect.oclIsTypeOf(OpaqueBehavior)) and Property.allInstances()->exists(p|p.stereotypeNonDeterministic>0)Region.allInstances()->size()>1 and StateMachine.allInstances()->exists(st|st.region->size()>1)Region.allInstances()->size()>0 and StateMachine.allInstances()->exists(st|st.region->size()=1)Region.allInstances()->size()>1 and StateMachine.allInstances()->exists(st|st.region->size()>1) and Property.allInstances()->exists(p|p.type.oclAsType(Class).stereotypeSystem>0) and Region.allInstances()->size()>1 and StateMachine.allInstances()->exists(st|st.region->size()>1)Region.allInstances()->size()>0 and StateMachine.allInstances()->exists(st|st.region->size()=1) and Property.allInstances()->exists(p|p.type.oclAsType(Class).stereotypeSystem>0) and Region.allInstances()->size()>1 and StateMachine.allInstances()->exists(st|st.region->size()>1)Region.allInstances()->size()>1 and StateMachine.allInstances()->exists(st|st.region->size()>1) and State.allInstances()->exists(st|st.isComposite=true)Region.allInstances()->size()>0 and StateMachine.allInstances()->exists(st|st.region->size()=1) and State.allInstances()->exists(st|st.isComposite=true)Region.allInstances()->exists(r|r.transition->notEmpty())Region.allInstances()->exists(r|r.transition->isEmpty())Region.allInstances()->size()>1 and StateMachine.allInstances()->exists(st|st.region->size()>1) and Property.allInstances()->exists(p|p.type.oclAsType(Class).stereotypeSystem>0) and Region.allInstances()->size()>1 and StateMachine.allInstances()->exists(st|st.region->size()>1)Region.allInstances()->size()>0 and StateMachine.allInstances()->exists(st|st.region->size()=1) and Property.allInstances()->exists(p|p.type.oclAsType(Class).stereotypeSystem>0) and Region.allInstances()->size()>1 and StateMachine.allInstances()->exists(st|st.region->size()>1)Region.allInstances()->size()>1 and StateMachine.allInstances()->exists(st|st.region->size()>1) and Property.allInstances()->exists(p|p.type.oclAsType(Class).stereotypeSystem>0) and Region.allInstances()->size()>1 and StateMachine.allInstances()->exists(st|st.region->size()>1)Region.allInstances()->size()>0 and StateMachine.allInstances()->exists(st|st.region->size()=1) and Property.allInstances()->exists(p|p.type.oclAsType(Class).stereotypeSystem>0) and Region.allInstances()->size()>1 and StateMachine.allInstances()->exists(st|st.region->size()>1)Property.allInstances()->exists(p|p.association.oclIsTypeOf(Association)) and Property.allInstances()->exists(p|p.type.oclAsType(Class).stereotypeSystem>0) and Region.allInstances()->size()>1 and StateMachine.allInstances()->exists(st|st.region->size()>1) and Region.allInstances()->size()>1 and StateMachine.allInstances()->exists(st|st.region->size()>1)Property.allInstances()->exists(p|p.association.oclIsUndefined()) and Property.allInstances()->exists(p|p.type.oclAsType(Class).stereotypeSystem>0) and Region.allInstances()->size()>1 and StateMachine.allInstances()->exists(st|st.region->size()>1) and Region.allInstances()->size()>1 and StateMachine.allInstances()->exists(st|st.region->size()>1)Property.allInstances()->exists(p|p.upperValue>1 or p.upperValue=-1) and Property.allInstances()->exists(p|p.association.oclIsTypeOf(Association))Property.allInstances()->exists(p|p.upperValue.oclIsUndefined()) and Property.allInstances()->exists(p|p.association.oclIsTypeOf(Association))Property.allInstances()->exists(p|p.type.oclAsType(Class).stereotypeSystem>0) and Property.allInstances()->exists(p|p.association.oclIsTypeOf(Association)) and Property.allInstances()->exists(p|p.upperValue>1 or p.upperValue=-1)Property.allInstances()->exists(p|p.type.oclAsType(Class).stereotypeSystem<=0) and Property.allInstances()->exists(p|p.association.oclIsTypeOf(Association)) and Property.allInstances()->exists(p|p.upperValue>1 or p.upperValue=-1)Property.allInstances()->exists(p|p.association.oclIsTypeOf(Association))Property.allInstances()->exists(p|p.association.oclIsUndefined())Property.allInstances()->exists(p|p.upperValue>1 or p.upperValue=-1) and Property.allInstances()->exists(p|p.association.oclIsTypeOf(Association))Property.allInstances()->exists(p|p.upperValue.oclIsUndefined()) and Property.allInstances()->exists(p|p.association.oclIsTypeOf(Association))Property.allInstances()->exists(p|p.type.oclAsType(Class).stereotypeSystem>0)Property.allInstances()->exists(p|p.type.oclAsType(Class).stereotypeSystem<=0)Region.allInstances()->size()>1 and StateMachine.allInstances()->exists(st|st.region->size()>1) and Property.allInstances()->exists(p|p.type.oclAsType(Class).stereotypeSystem>0)Region.allInstances()->size()>0 and StateMachine.allInstances()->exists(st|st.region->size()=1) and Property.allInstances()->exists(p|p.type.oclAsType(Class).stereotypeSystem>0)Region.allInstances()->size()>1 and StateMachine.allInstances()->exists(st|st.region->size()>1) and Property.allInstances()->exists(p|p.type.oclAsType(Class).stereotypeSystem>0) and Region.allInstances()->size()>1 and StateMachine.allInstances()->exists(st|st.region->size()>1)Region.allInstances()->size()>0 and StateMachine.allInstances()->exists(st|st.region->size()=1) and Property.allInstances()->exists(p|p.type.oclAsType(Class).stereotypeSystem>0) and Region.allInstances()->size()>1 and StateMachine.allInstances()->exists(st|st.region->size()>1)Transition.allInstances()->exists(t|t.target.oclIsTypeOf(State)) and Property.allInstances()->exists(p|p.type.oclAsType(Class).stereotypeSystem>0) and Region.allInstances()->size()>1 and StateMachine.allInstances()->exists(st|st.region->size()>1) and Region.allInstances()->size()>0 and StateMachine.allInstances()->exists(st|st.region->size()=1)Transition.allInstances()->exists(t|t.target.oclIsTypeOf(State)) and State.allInstances()->exists(st|st.isComposite=false) and Property.allInstances()->exists(p|p.type.oclAsType(Class).stereotypeSystem>0) and Region.allInstances()->size()>1 and StateMachine.allInstances()->exists(st|st.region->size()>1) and Region.allInstances()->size()>0 and StateMachine.allInstances()->exists(st|st.region->size()=1)State.allInstances()->exists(st|st.isComposite=true and st.region->size()=1)State.allInstances()->exists(st|st.isComposite=false)State.allInstances()->exists(st|st.isComposite=true)State.allInstances()->exists(st|st.isComposite=false)State.allInstances()->exists(st|st.isComposite=true) and Property.allInstances()->exists(p|p.type.oclAsType(Class).stereotypeSystem>0) and Region.allInstances()->size()>1 and StateMachine.allInstances()->exists(st|st.region->size()>1) and Region.allInstances()->size()>0 and StateMachine.allInstances()->exists(st|st.region->size()=1) and Transition.allInstances()->exists(t|t.target.oclIsTypeOf(State)) and State.allInstances()->exists(st|st.isComposite=false)State.allInstances()->exists(st|st.isComposite=false) and Property.allInstances()->exists(p|p.type.oclAsType(Class).stereotypeSystem>0) and Region.allInstances()->size()>1 and StateMachine.allInstances()->exists(st|st.region->size()>1) and Region.allInstances()->size()>0 and StateMachine.allInstances()->exists(st|st.region->size()=1) and Transition.allInstances()->exists(t|t.target.oclIsTypeOf(State)) and State.allInstances()->exists(st|st.isComposite=false)Transition.allInstances()->exists(t|t.source.oclIsTypeOf(Pseudostate)) and Class.allInstances()->exists(c|c.isActive=true) and Class.allInstances()->exists(c|c.ownedOperation->notEmpty()) and Transition.allInstances()->exists(t|t.effect.oclIsTypeOf(OpaqueBehavior)) and Property.allInstances()->exists(p|p.stereotypeNonDeterministic>0) and Region.allInstances()->size()>0 and StateMachine.allInstances()->exists(st|st.region->size()=1)Transition.allInstances()->exists(t|t.source.oclIsUndefined()) and Class.allInstances()->exists(c|c.isActive=true) and Class.allInstances()->exists(c|c.ownedOperation->notEmpty()) and Transition.allInstances()->exists(t|t.effect.oclIsTypeOf(OpaqueBehavior)) and Property.allInstances()->exists(p|p.stereotypeNonDeterministic>0) and Region.allInstances()->size()>0 and StateMachine.allInstances()->exists(st|st.region->size()=1)Transition.allInstances()->exists(t|t.target.oclIsTypeOf(State)) and State.allInstances()->exists(st|st.isComposite=true) and Transition.allInstances()->exists(t|t.target.oclIsTypeOf(FinalState) or t.target.oclIsTypeOf(State))Transition.allInstances()->exists(t|t.target.oclIsTypeOf(State)) and State.allInstances()->exists(st|st.isComposite=false) and Transition.allInstances()->exists(t|t.target.oclIsTypeOf(FinalState) or t.target.oclIsTypeOf(State))Transition.allInstances()->exists(t|t.target.oclIsTypeOf(State)) and State.allInstances()->exists(st|st.isOrthogonal=true)Transition.allInstances()->exists(t|t.target.oclIsTypeOf(State)) and State.allInstances()->exists(st|st.isOrthogonal=false)Transition.allInstances()->exists(t|t.trigger->exists(tt|tt.oclIsTypeOf(Trigger))) and Trigger.allInstances()->exists(tr|tr.event.oclIsTypeOf(TimeEvent)) and TimeEvent.allInstances()->exists(t|t.when.oclIsTypeOf(TimeExpression)) and TimeExpression.allInstances()->exists(t|t.expr.oclIsTypeOf(OpaqueExpression))Transition.allInstances()->exists(t|t.trigger->exists(tt|tt.oclIsTypeOf(Trigger))) and Trigger.allInstances()->exists(tr|tr.event.oclIsTypeOf(AnyRecieveEvent))Transition.allInstances()->exists(t|t.target.oclIsKindOf(State) and t.stereotypeTimeProbability>0) and Transition.allInstances()->exists(t|t.trigger->exists(tt|tt.oclIsTypeOf(Trigger))) and Trigger.allInstances()->exists(tr|tr.event.oclIsTypeOf(TimeEvent)) and TimeEvent.allInstances()->exists(t|t.when.oclIsTypeOf(TimeExpression)) and TimeExpression.allInstances()->exists(t|t.expr.oclIsTypeOf(OpaqueExpression))Transition.allInstances()->exists(t|t.target.oclIsKindOf(State) and t.stereotypeTimeProbability<=0) and Transition.allInstances()->exists(t|t.trigger->exists(tt|tt.oclIsTypeOf(Trigger))) and Trigger.allInstances()->exists(tr|tr.event.oclIsTypeOf(TimeEvent)) and TimeEvent.allInstances()->exists(t|t.when.oclIsTypeOf(TimeExpression)) and TimeExpression.allInstances()->exists(t|t.expr.oclIsTypeOf(OpaqueExpression))Trigger.allInstances()->exists(tr|tr.event.oclIsTypeOf(SignalEvent)) and SignalEvent.allInstances()->exists(c|c.signal.oclIsTypeOf(Signal)) and Transition.allInstances()->exists(t|t.trigger->exists(tt|tt.oclIsTypeOf(Trigger))) and Trigger.allInstances()->exists(tr|tr.event.oclIsTypeOf(TimeEvent)) and TimeEvent.allInstances()->exists(t|t.when.oclIsTypeOf(TimeExpression)) and TimeExpression.allInstances()->exists(t|t.expr.oclIsTypeOf(OpaqueExpression)) and Transition.allInstances()->exists(t|t.target.oclIsKindOf(State) and t.stereotypeTimeProbability>0)Trigger.allInstances()->exists(tr|tr.event.oclIsTypeOf(AnyRecieveEvent)) and Transition.allInstances()->exists(t|t.trigger->exists(tt|tt.oclIsTypeOf(Trigger))) and Trigger.allInstances()->exists(tr|tr.event.oclIsTypeOf(TimeEvent)) and TimeEvent.allInstances()->exists(t|t.when.oclIsTypeOf(TimeExpression)) and TimeExpression.allInstances()->exists(t|t.expr.oclIsTypeOf(OpaqueExpression)) and Transition.allInstances()->exists(t|t.target.oclIsKindOf(State) and t.stereotypeTimeProbability>0)Transition.allInstances()->exists(t|t.stereotypeNonLeaving>0) and Transition.allInstances()->exists(t|t.trigger->exists(tt|tt.oclIsTypeOf(Trigger))) and Trigger.allInstances()->exists(tr|tr.event.oclIsTypeOf(TimeEvent)) and TimeEvent.allInstances()->exists(t|t.when.oclIsTypeOf(TimeExpression)) and TimeExpression.allInstances()->exists(t|t.expr.oclIsTypeOf(OpaqueExpression)) and Transition.allInstances()->exists(t|t.target.oclIsKindOf(State) and t.stereotypeTimeProbability>0) and Trigger.allInstances()->exists(tr|tr.event.oclIsTypeOf(SignalEvent)) and SignalEvent.allInstances()->exists(c|c.signal.oclIsTypeOf(Signal))Transition.allInstances()->exists(t|t.stereotypeNonLeaving<=0) and Transition.allInstances()->exists(t|t.trigger->exists(tt|tt.oclIsTypeOf(Trigger))) and Trigger.allInstances()->exists(tr|tr.event.oclIsTypeOf(TimeEvent)) and TimeEvent.allInstances()->exists(t|t.when.oclIsTypeOf(TimeExpression)) and TimeExpression.allInstances()->exists(t|t.expr.oclIsTypeOf(OpaqueExpression)) and Transition.allInstances()->exists(t|t.target.oclIsKindOf(State) and t.stereotypeTimeProbability>0) and Trigger.allInstances()->exists(tr|tr.event.oclIsTypeOf(SignalEvent)) and SignalEvent.allInstances()->exists(c|c.signal.oclIsTypeOf(Signal))Transition.allInstances()->exists(t|t.effect.oclIsTypeOf(OpaqueBehavior)) and Transition.allInstances()->exists(t|t.trigger->exists(tt|tt.oclIsTypeOf(Trigger))) and Trigger.allInstances()->exists(tr|tr.event.oclIsTypeOf(TimeEvent)) and TimeEvent.allInstances()->exists(t|t.when.oclIsTypeOf(TimeExpression)) and TimeExpression.allInstances()->exists(t|t.expr.oclIsTypeOf(OpaqueExpression)) and Transition.allInstances()->exists(t|t.target.oclIsKindOf(State) and t.stereotypeTimeProbability>0) and Trigger.allInstances()->exists(tr|tr.event.oclIsTypeOf(SignalEvent)) and SignalEvent.allInstances()->exists(c|c.signal.oclIsTypeOf(Signal)) and Transition.allInstances()->exists(t|t.stereotypeNonLeaving>0)Transition.allInstances()->exists(t|t.effect.oclIsUndefined()) and Transition.allInstances()->exists(t|t.trigger->exists(tt|tt.oclIsTypeOf(Trigger))) and Trigger.allInstances()->exists(tr|tr.event.oclIsTypeOf(TimeEvent)) and TimeEvent.allInstances()->exists(t|t.when.oclIsTypeOf(TimeExpression)) and TimeExpression.allInstances()->exists(t|t.expr.oclIsTypeOf(OpaqueExpression)) and Transition.allInstances()->exists(t|t.target.oclIsKindOf(State) and t.stereotypeTimeProbability>0) and Trigger.allInstances()->exists(tr|tr.event.oclIsTypeOf(SignalEvent)) and SignalEvent.allInstances()->exists(c|c.signal.oclIsTypeOf(Signal)) and Transition.allInstances()->exists(t|t.stereotypeNonLeaving>0)Transition.allInstances()->exists(t|t.stereotypeNonLeaving>0)Transition.allInstances()->exists(t|t.stereotypeNonLeaving<=0)Trigger.allInstances()->exists(tr|tr.event.oclIsTypeOf(ChangeEvent)) and ChangeEvent.allInstances()->exists(c|c.changeExpression.oclIsTypeOf(OpaqueExpression))Trigger.allInstances()->exists(tr|tr.event.oclIsTypeOf(AnyRecieveEvent))Transition.allInstances()->exists(t|t.stereotypeNonLeaving>0)Transition.allInstances()->exists(t|t.stereotypeNonLeaving<=0)Transition.allInstances()->exists(t|t.guard.oclIsTypeOf(Constraint)) and Constraint.allInstances()->exists(c|c.specification.oclIsTypeOf(OpaqueExpression)) and Transition.allInstances()->exists(t|t.stereotypeNonLeaving>0)Transition.allInstances()->exists(t|t.guard.oclIsUndefined()) and Transition.allInstances()->exists(t|t.stereotypeNonLeaving>0)State.allInstances()->exists (s| s.stereotypeError>0)State.allInstances()->exists (s|s.stereotypeError<=0)Transition.allInstances()->exists(t|t.trigger->exists(tt|tt.oclIsTypeOf(Trigger))) and Trigger.allInstances()->exists(tr|tr.event.oclIsTypeOf(TimeEvent)) and TimeEvent.allInstances()->exists(t|t.when.oclIsTypeOf(TimeExpression)) and TimeExpression.allInstances()->exists(t|t.expr.oclIsTypeOf(OpaqueExpression))Transition.allInstances()->exists(t|t.trigger->exists(tt|tt.oclIsTypeOf(Trigger))) and Trigger.allInstances()->exists(tr|tr.event.oclIsTypeOf(AnyRecieveEvent))Transition.allInstances()->exists(t|t.target.oclIsKindOf(State) and t.stereotypeTimeProbability>0) and Transition.allInstances()->exists(t|t.trigger->exists(tt|tt.oclIsTypeOf(Trigger))) and Trigger.allInstances()->exists(tr|tr.event.oclIsTypeOf(TimeEvent)) and TimeEvent.allInstances()->exists(t|t.when.oclIsTypeOf(TimeExpression)) and TimeExpression.allInstances()->exists(t|t.expr.oclIsTypeOf(OpaqueExpression))Transition.allInstances()->exists(t|t.target.oclIsKindOf(State) and t.stereotypeTimeProbability<=0) and Transition.allInstances()->exists(t|t.trigger->exists(tt|tt.oclIsTypeOf(Trigger))) and Trigger.allInstances()->exists(tr|tr.event.oclIsTypeOf(TimeEvent)) and TimeEvent.allInstances()->exists(t|t.when.oclIsTypeOf(TimeExpression)) and TimeExpression.allInstances()->exists(t|t.expr.oclIsTypeOf(OpaqueExpression))Trigger.allInstances()->exists(tr|tr.event.oclIsTypeOf(SignalEvent)) and SignalEvent.allInstances()->exists(c|c.signal.oclIsTypeOf(Signal)) and Transition.allInstances()->exists(t|t.trigger->exists(tt|tt.oclIsTypeOf(Trigger))) and Trigger.allInstances()->exists(tr|tr.event.oclIsTypeOf(TimeEvent)) and TimeEvent.allInstances()->exists(t|t.when.oclIsTypeOf(TimeExpression)) and TimeExpression.allInstances()->exists(t|t.expr.oclIsTypeOf(OpaqueExpression)) and Transition.allInstances()->exists(t|t.target.oclIsKindOf(State) and t.stereotypeTimeProbability>0)Trigger.allInstances()->exists(tr|tr.event.oclIsTypeOf(AnyRecieveEvent)) and Transition.allInstances()->exists(t|t.trigger->exists(tt|tt.oclIsTypeOf(Trigger))) and Trigger.allInstances()->exists(tr|tr.event.oclIsTypeOf(TimeEvent)) and TimeEvent.allInstances()->exists(t|t.when.oclIsTypeOf(TimeExpression)) and TimeExpression.allInstances()->exists(t|t.expr.oclIsTypeOf(OpaqueExpression)) and Transition.allInstances()->exists(t|t.target.oclIsKindOf(State) and t.stereotypeTimeProbability>0)Transition.allInstances()->exists(t|t.stereotypeNonLeaving>0) and Transition.allInstances()->exists(t|t.trigger->exists(tt|tt.oclIsTypeOf(Trigger))) and Trigger.allInstances()->exists(tr|tr.event.oclIsTypeOf(TimeEvent)) and TimeEvent.allInstances()->exists(t|t.when.oclIsTypeOf(TimeExpression)) and TimeExpression.allInstances()->exists(t|t.expr.oclIsTypeOf(OpaqueExpression)) and Transition.allInstances()->exists(t|t.target.oclIsKindOf(State) and t.stereotypeTimeProbability>0) and Trigger.allInstances()->exists(tr|tr.event.oclIsTypeOf(SignalEvent)) and SignalEvent.allInstances()->exists(c|c.signal.oclIsTypeOf(Signal))Transition.allInstances()->exists(t|t.stereotypeNonLeaving<=0) and Transition.allInstances()->exists(t|t.trigger->exists(tt|tt.oclIsTypeOf(Trigger))) and Trigger.allInstances()->exists(tr|tr.event.oclIsTypeOf(TimeEvent)) and TimeEvent.allInstances()->exists(t|t.when.oclIsTypeOf(TimeExpression)) and TimeExpression.allInstances()->exists(t|t.expr.oclIsTypeOf(OpaqueExpression)) and Transition.allInstances()->exists(t|t.target.oclIsKindOf(State) and t.stereotypeTimeProbability>0) and Trigger.allInstances()->exists(tr|tr.event.oclIsTypeOf(SignalEvent)) and SignalEvent.allInstances()->exists(c|c.signal.oclIsTypeOf(Signal))Transition.allInstances()->exists(t|t.effect.oclIsTypeOf(OpaqueBehavior)) and Transition.allInstances()->exists(t|t.trigger->exists(tt|tt.oclIsTypeOf(Trigger))) and Trigger.allInstances()->exists(tr|tr.event.oclIsTypeOf(TimeEvent)) and TimeEvent.allInstances()->exists(t|t.when.oclIsTypeOf(TimeExpression)) and TimeExpression.allInstances()->exists(t|t.expr.oclIsTypeOf(OpaqueExpression)) and Transition.allInstances()->exists(t|t.target.oclIsKindOf(State) and t.stereotypeTimeProbability>0) and Trigger.allInstances()->exists(tr|tr.event.oclIsTypeOf(SignalEvent)) and SignalEvent.allInstances()->exists(c|c.signal.oclIsTypeOf(Signal)) and Transition.allInstances()->exists(t|t.stereotypeNonLeaving>0)Transition.allInstances()->exists(t|t.effect.oclIsUndefined()) and Transition.allInstances()->exists(t|t.trigger->exists(tt|tt.oclIsTypeOf(Trigger))) and Trigger.allInstances()->exists(tr|tr.event.oclIsTypeOf(TimeEvent)) and TimeEvent.allInstances()->exists(t|t.when.oclIsTypeOf(TimeExpression)) and TimeExpression.allInstances()->exists(t|t.expr.oclIsTypeOf(OpaqueExpression)) and Transition.allInstances()->exists(t|t.target.oclIsKindOf(State) and t.stereotypeTimeProbability>0) and Trigger.allInstances()->exists(tr|tr.event.oclIsTypeOf(SignalEvent)) and SignalEvent.allInstances()->exists(c|c.signal.oclIsTypeOf(Signal)) and Transition.allInstances()->exists(t|t.stereotypeNonLeaving>0)Transition.allInstances()->exists(t|t.stereotypeNonLeaving>0)Transition.allInstances()->exists(t|t.stereotypeNonLeaving<=0)Trigger.allInstances()->exists(tr|tr.event.oclIsTypeOf(ChangeEvent)) and ChangeEvent.allInstances()->exists(c|c.changeExpression.oclIsTypeOf(OpaqueExpression))Trigger.allInstances()->exists(tr|tr.event.oclIsTypeOf(AnyRecieveEvent))Transition.allInstances()->exists(t|t.stereotypeNonLeaving>0)Transition.allInstances()->exists(t|t.stereotypeNonLeaving<=0)Transition.allInstances()->exists(t|t.guard.oclIsTypeOf(Constraint)) and Constraint.allInstances()->exists(c|c.specification.oclIsTypeOf(OpaqueExpression)) and Transition.allInstances()->exists(t|t.stereotypeNonLeaving>0)Transition.allInstances()->exists(t|t.guard.oclIsUndefined()) and Transition.allInstances()->exists(t|t.stereotypeNonLeaving>0)State.allInstances()->exists (s| s.stereotypeError>0)State.allInstances()->exists (s|s.stereotypeError<=0)AVM	Break 	 1 	 0.0 	 0 	 0 	 false 	 0.0 	 655.888
