package org.questlab.motter.driver;

import org.questlab.motter.mof.driver.MOFDriver;
import org.questlab.motter.oclSolver.driver.OCLDriverforMOF;
import org.questlab.motter.uml2instance.driver.InstanceStateMachineGeneratorDriver;
import questlab.motter.common.driver.MOF_Fitness_Calculator;

 public class MOTTER_MOF_Driver {

	public static void main(String[] args) {
		try {
		//	ArrayList<List<Object>> result;
			////////////////////////////OCL Solver     /////////////////////
			
			String umlFile = "I:/workspace-xp/MotterTool_Driver/OCLSolverInput/StateMachineMetaModel.uml";
			String objDiagramPath = "I:/workspace-xp/MotterTool_Driver/OCLSolverOutput";
			String oclSolverResultFile=objDiagramPath;
			// Create UML StateMachine from ClassifierTuple
			String arg1[] = new String[2];
			arg1[0]=umlFile; //Path and Name of the Meta-Model to be provided to OCL Solver
			arg1[1]=objDiagramPath; //Path where OCL Solver generated 3 file 2 object diagrams and 1 Value Tuple
			OCLDriverforMOF.main(arg1);
			
			////////////////////////////   Instance Generator     /////////////////////
			
			String pathforMOFRunner="I:/workspace-xp/MotterTool_Driver/OCLSolverOutput";
//			String pathforMOFRunner="I:/workspace-xp/MotterTool_MOFRunner/OCLSolverOutput";
			
			String objDiagramFileName = "OCL_GenSM";
			String arg2[] = new String[3];
			arg2[0]=objDiagramFileName;// Name of the File to be created
			arg2[1]=pathforMOFRunner;// Path where UML file need to be created. 
			arg2[2]=oclSolverResultFile; //Path where OCL file txt is to be read.
			InstanceStateMachineGeneratorDriver.main(arg2);
			
            ////////////////////////////MOF Script Code Generator     /////////////////////
			
       	//	MOFDriver.main(new String[1]);
		    MOFDriver.main(args);
		    
			MOF_Fitness_Calculator launch=new MOF_Fitness_Calculator();
			String MOFExecutionLog = "OCLSolverOutput/MOFLogFile.txt";
			launch.printCFG(launch.executeTransformation(MOFExecutionLog));
			launch.CalculateFitness(launch.executeTransformation(MOFExecutionLog));

		} catch (Exception e) {
			e.printStackTrace();
		}
	}
}

